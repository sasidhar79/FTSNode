0 info it worked if it ends with ok
1 verbose cli [ 'E:\\nodejs\\\\node.exe',
1 verbose cli   'E:\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'install',
1 verbose cli   'msnodesql' ]
2 info using npm@2.5.1
3 info using node@v0.12.0
4 verbose node symlink E:\nodejs\\node.exe
5 silly cache add args [ 'msnodesql', null ]
6 verbose cache add spec msnodesql
7 silly cache add parsed spec { raw: 'msnodesql',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: 'msnodesql',
7 silly cache add   spec: 'E:\\FTS\\FTSNode\\node_modules\\msnodesql',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory C:\Users\sbetha.MPSPF\AppData\Roaming\npm-cache\msnodesql\0.2.1\package.tgz not in flight; packing
9 verbose tar pack [ 'C:\\Users\\sbetha.MPSPF\\AppData\\Roaming\\npm-cache\\msnodesql\\0.2.1\\package.tgz',
9 verbose tar pack   'E:\\FTS\\FTSNode\\node_modules\\msnodesql' ]
10 verbose tarball C:\Users\sbetha.MPSPF\AppData\Roaming\npm-cache\msnodesql\0.2.1\package.tgz
11 verbose folder E:\FTS\FTSNode\node_modules\msnodesql
12 info prepublish msnodesql@0.2.1
13 verbose addLocalTarball adding from inside cache C:\Users\sbetha.MPSPF\AppData\Roaming\npm-cache\msnodesql\0.2.1\package.tgz
14 silly cache afterAdd msnodesql@0.2.1
15 verbose afterAdd C:\Users\sbetha.MPSPF\AppData\Roaming\npm-cache\msnodesql\0.2.1\package\package.json not in flight; writing
16 verbose afterAdd C:\Users\sbetha.MPSPF\AppData\Roaming\npm-cache\msnodesql\0.2.1\package\package.json written
17 silly install resolved [ { name: 'msnodesql',
17 silly install resolved     description: 'Microsoft Driver for Node.js for SQL Server',
17 silly install resolved     author: { name: 'Microsoft Corp.' },
17 silly install resolved     contributors: [ [Object], [Object], [Object], [Object], [Object] ],
17 silly install resolved     version: '0.2.1',
17 silly install resolved     keywords:
17 silly install resolved      [ 'sql',
17 silly install resolved        'database',
17 silly install resolved        'mssql',
17 silly install resolved        'azure',
17 silly install resolved        'sqlserver',
17 silly install resolved        'tds',
17 silly install resolved        'microsoft',
17 silly install resolved        'msnodesql',
17 silly install resolved        'node-sqlserver' ],
17 silly install resolved     homepage: 'https://github.com/WindowsAzure/node-sqlserver',
17 silly install resolved     bugs: { url: 'https://github.com/WindowsAzure/node-sqlserver/issues' },
17 silly install resolved     licenses: [ [Object] ],
17 silly install resolved     main: './lib/sql.js',
17 silly install resolved     repository:
17 silly install resolved      { type: 'git',
17 silly install resolved        url: 'git://github.com/WindowsAzure/node-sqlserver.git' },
17 silly install resolved     engines: { node: '>=0.6' },
17 silly install resolved     devDependencies: { mocha: '0.14.x', async: '0.1.x' },
17 silly install resolved     os: [ 'win32' ],
17 silly install resolved     scripts: { install: 'node scripts/install.js' },
17 silly install resolved     readme: '# Microsoft Driver for Node.js for SQL Server\r\n\r\nThe Microsoft Driver for Node.js for SQL Server allows Node.js applications on\r\nMicrosoft Windows and Microsoft Windows Azure to access Microsoft SQL Server \r\nand Microsoft Windows Azure SQL Database.\r\n\r\nThis is an initial preview release, and is not production ready. We welcome any\r\nfeedback, fixes and contributions from the community at this very early stage.\r\n\r\n## Prerequisites\r\n\r\nThe following prerequisites are necessary prior to using the driver:\r\n\r\n* Node.js - use the latest version if possible, but it has been tested on node\r\n0.6.10 and later\r\n\r\n* node-gyp - latest version installed globally (npm install -g node-gyp)\r\n\r\n* python 2.7.x - for node-gyp (make sure it is in the path)\r\n\r\n* Visual C++ 2010 - the Express edition is freely available from \r\n[Microsoft][visualstudio]\r\n\r\n* SQL Server Native Client 11.0 - available as Microsoft SQL Server 2012 \r\nNative Client found in the [SQL Server 2012 Feature Pack][sqlncli]\r\n\r\n## Build\r\n\r\nTo build the driver, first node-gyp must configure the appropriate build files.\r\n\r\n    node-gyp configure\r\n\r\nUse node-gyp to build the driver:\r\n\r\n    node-gyp build\r\n\r\nOr to build the debug version:\r\n\r\n    node-gyp build --debug\r\n\r\nThen copy the sqlserver.node file from the build\\\\(Release|Debug) directory to\r\nthe lib directory.  If you would like to use Visual C++ to debug the driver,\r\nalso copy the sqlserver.pdb file from the same directory.\r\n\r\n## Test\r\n\r\nIncluded are a few unit tests.  They require mocha, async, and assert to be \r\ninstalled via npm.  Also, set the variables in test-config.js, then run the \r\ntests as follows:\r\n\r\n    cd test\r\n    node runtests.js\r\n\r\n## Known Issues\r\n\r\nWe are aware that many features are still not implemented, and are working to\r\nupdate these. Please visit the [project on Github][project] to view \r\noutstanding [issues][issues].\r\n\r\n## Usage\r\n\r\nFor now, please see the unit tests for usage examples.\r\n\r\n## Contribute Code\r\n\r\nIf you would like to become an active contributor to this project please follow the instructions provided in [the Contribution Guidelines][contribute].\r\n\r\n## License\r\n\r\nThe Microsoft Driver for Node.js for SQL Server is licensed under the Apache\r\n2.0 license.  See the LICENSE file for more details.\r\n\r\n[visualstudio]: http://www.microsoft.com/visualstudio/\r\n\r\n[sqlncli]: http://www.microsoft.com/en-us/download/details.aspx?id=29065\r\n\r\n[project]: https://github.com/windowsazure/node-sqlserver\r\n\r\n[issues]: https://github.com/windowsazure/node-sqlserver/issues\r\n\r\n[contribute]: https://github.com/WindowsAzure/node-sqlserver/blob/master/CONTRIBUTING.md\r\n\r\n\r\n\r\n',
17 silly install resolved     readmeFilename: 'README.md',
17 silly install resolved     _id: 'msnodesql@0.2.1',
17 silly install resolved     _shasum: '5a847d71eb6248df6bb30056a673a58bd2eede3a',
17 silly install resolved     _from: 'node_modules\\msnodesql',
17 silly install resolved     _resolved: 'file:node_modules\\msnodesql' } ]
18 info install msnodesql@0.2.1 into E:\FTS\FTSNode
19 info installOne msnodesql@0.2.1
20 verbose installOne of msnodesql to E:\FTS\FTSNode not in flight; installing
21 verbose lock using C:\Users\sbetha.MPSPF\AppData\Roaming\npm-cache\_locks\msnodesql-fcba660270abb381.lock for E:\FTS\FTSNode\node_modules\msnodesql
22 silly install write writing msnodesql 0.2.1 to E:\FTS\FTSNode\node_modules\msnodesql
23 silly cache addNamed cb msnodesql@0.2.1
24 verbose unbuild node_modules\msnodesql
25 info preuninstall msnodesql@0.2.1
26 info uninstall msnodesql@0.2.1
27 verbose unbuild rmStuff msnodesql@0.2.1 from E:\FTS\FTSNode\node_modules
28 info postuninstall msnodesql@0.2.1
29 verbose gentlyRm vacuuming E:\FTS\FTSNode\node_modules\msnodesql
30 silly gentlyRm purging E:\FTS\FTSNode\node_modules\msnodesql
31 silly gentlyRm quitting because other entries in E:\FTS\FTSNode\node_modules
32 verbose tar unpack C:\Users\sbetha.MPSPF\AppData\Roaming\npm-cache\msnodesql\0.2.1\package.tgz
33 verbose tar unpacking to E:\FTS\FTSNode\node_modules\msnodesql
34 verbose gentlyRm vacuuming E:\FTS\FTSNode\node_modules\msnodesql
35 silly gunzTarPerm modes [ '777', '666' ]
36 silly gunzTarPerm extractEntry package.json
37 silly gunzTarPerm extractEntry .npmignore
38 silly gunzTarPerm extractEntry README.md
39 silly gunzTarPerm extractEntry LICENSE
40 silly gunzTarPerm extractEntry CONTRIBUTORS
41 silly gunzTarPerm extractEntry binding.gyp
42 silly gunzTarPerm extractEntry CONTRIBUTING.md
43 silly gunzTarPerm extractEntry msnodesql-0.2.1-v0.8-x64.msi
44 silly gunzTarPerm extractEntry test/CommonTestFunctions.js
45 silly gunzTarPerm extractEntry test/connect.js
46 silly gunzTarPerm extractEntry test/datatypes.js
47 silly gunzTarPerm extractEntry test/dates.js
48 silly gunzTarPerm extractEntry test/compoundqueries.js
49 silly gunzTarPerm extractEntry test/query.js
50 silly gunzTarPerm extractEntry test/runtests.js
51 silly gunzTarPerm extractEntry test/test-config.js
52 silly gunzTarPerm extractEntry test/txn.js
53 silly gunzTarPerm extractEntry test/params.js
54 silly gunzTarPerm extractEntry test/testlist.txt
55 silly gunzTarPerm extractEntry scripts/install.js
56 silly gunzTarPerm extractEntry src/OdbcHandle.h
57 silly gunzTarPerm extractEntry src/Column.cpp
58 silly gunzTarPerm extractEntry src/Connection.cpp
59 silly gunzTarPerm extractEntry src/Connection.h
60 silly gunzTarPerm extractEntry src/CriticalSection.h
61 silly gunzTarPerm extractEntry src/OdbcConnection.cpp
62 silly gunzTarPerm extractEntry src/OdbcConnection.h
63 silly gunzTarPerm extractEntry src/OdbcConnectionBridge.h
64 silly gunzTarPerm extractEntry src/OdbcError.cpp
65 silly gunzTarPerm extractEntry src/OdbcError.h
66 silly gunzTarPerm extractEntry src/Column.h
67 silly gunzTarPerm extractEntry src/OdbcOperation.cpp
68 silly gunzTarPerm extractEntry src/OdbcOperation.h
69 silly gunzTarPerm extractEntry src/Operation.h
70 silly gunzTarPerm extractEntry src/ResultSet.cpp
71 silly gunzTarPerm extractEntry src/ResultSet.h
72 silly gunzTarPerm extractEntry src/Utility.cpp
73 silly gunzTarPerm extractEntry src/Utility.h
74 silly gunzTarPerm extractEntry src/sqlncli.h
75 silly gunzTarPerm extractEntry src/stdafx.cpp
76 silly gunzTarPerm extractEntry src/stdafx.h
77 silly gunzTarPerm extractEntry lib/sql.js
78 silly gunzTarPerm extractEntry lib/sqlserver.native.js
79 info preinstall msnodesql@0.2.1
80 silly install resolved []
81 verbose about to build E:\FTS\FTSNode\node_modules\msnodesql
82 info build E:\FTS\FTSNode\node_modules\msnodesql
83 verbose linkStuff [ false, false, false, 'E:\\FTS\\FTSNode\\node_modules' ]
84 info linkStuff msnodesql@0.2.1
85 verbose linkBins msnodesql@0.2.1
86 verbose linkMans msnodesql@0.2.1
87 verbose rebuildBundles msnodesql@0.2.1
88 info install msnodesql@0.2.1
89 verbose unsafe-perm in lifecycle true
90 info msnodesql@0.2.1 Failed to exec install script
91 verbose unlock done using C:\Users\sbetha.MPSPF\AppData\Roaming\npm-cache\_locks\msnodesql-fcba660270abb381.lock for E:\FTS\FTSNode\node_modules\msnodesql
92 verbose stack Error: msnodesql@0.2.1 install: `node scripts/install.js`
92 verbose stack Exit status 1
92 verbose stack     at EventEmitter.<anonymous> (E:\nodejs\node_modules\npm\lib\utils\lifecycle.js:213:16)
92 verbose stack     at EventEmitter.emit (events.js:110:17)
92 verbose stack     at ChildProcess.<anonymous> (E:\nodejs\node_modules\npm\lib\utils\spawn.js:14:12)
92 verbose stack     at ChildProcess.emit (events.js:110:17)
92 verbose stack     at maybeClose (child_process.js:1008:16)
92 verbose stack     at Process.ChildProcess._handle.onexit (child_process.js:1080:5)
93 verbose pkgid msnodesql@0.2.1
94 verbose cwd E:\FTS\FTSNode\node_modules
95 error Windows_NT 6.1.7601
96 error argv "E:\\nodejs\\\\node.exe" "E:\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "install" "msnodesql"
97 error node v0.12.0
98 error npm  v2.5.1
99 error code ELIFECYCLE
100 error msnodesql@0.2.1 install: `node scripts/install.js`
100 error Exit status 1
101 error Failed at the msnodesql@0.2.1 install script 'node scripts/install.js'.
101 error This is most likely a problem with the msnodesql package,
101 error not with npm itself.
101 error Tell the author that this fails on your system:
101 error     node scripts/install.js
101 error You can get their info via:
101 error     npm owner ls msnodesql
101 error There is likely additional logging output above.
102 verbose exit [ 1, true ]
103 verbose unbuild node_modules\msnodesql
104 info preuninstall msnodesql@0.2.1
105 info uninstall msnodesql@0.2.1
106 verbose unbuild rmStuff msnodesql@0.2.1 from E:\FTS\FTSNode\node_modules
107 info postuninstall msnodesql@0.2.1
108 verbose gentlyRm vacuuming E:\FTS\FTSNode\node_modules\msnodesql
109 silly gentlyRm purging E:\FTS\FTSNode\node_modules\msnodesql
110 silly gentlyRm quitting because other entries in E:\FTS\FTSNode\node_modules
